{"version":3,"sources":["services/randomName.js","store/notes.reducer.js","store/store.js","common/navbar/Navbar.jsx","components/createForm/CreateForm.jsx","components/editForm/EditForm.jsx","components/notes/Notes.jsx","common/footer/Footer.jsx","App.jsx","index.js"],"names":["randomName","possible","randomString","i","charAt","Math","floor","random","length","data","array","id","title","description","updateId","createForm","updateForm","ACTIVE_CREATE","ACTIVE_UPDATE","CREATE_NOTE","SET_UPDATE_ID","UPDATE_NOTE","DELETE_NOTE","activeCreateForm","active","dispatch","getState","type","payload","activeUpdateForm","rootReducer","combineReducers","notes","state","action","index","findIndex","note","newArray","update","form","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","generateStore","createStore","applyMiddleware","thunk","Navbar","useDispatch","className","onClick","CreateForm","useForm","register","errors","handleSubmit","useState","setData","activeForm","useSelector","store","onSubmit","e","noteDetails","randomId","preventDefault","name","placeholder","ref","required","value","message","maxLength","onChange","target","rows","EditForm","Notes","setId","delNote","map","item","Footer","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1e25767c.chunk.js","sourcesContent":["const randomName = () => {\r\n  const possible =\r\n    \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\r\n  let randomString = \"\";\r\n  for (let i = 0; i < 5; i++) {\r\n    randomString += possible.charAt(\r\n      Math.floor(Math.random() * possible.length)\r\n    );\r\n  }\r\n  return randomString;\r\n};\r\n\r\nexport default randomName;\r\n","//--------------------------IMPORTS\r\n\r\nimport randomId from \"../services/randomName\";\r\n\r\n//--------------------------CONSTANT\r\n\r\nconst data = {\r\n  array: [\r\n    {\r\n      id: \"1\",\r\n      title: \"Info\",\r\n      description:\r\n        \"This site was created using React.js, Redux, CSS3 and React Hook Form. The site is not connected to a database so the notes will be lost when the page is reloaded or closed.\",\r\n    },\r\n  ],\r\n  updateId: \"\",\r\n  createForm: false,\r\n  updateForm: false,\r\n};\r\n\r\nconst ACTIVE_CREATE = \"ACTIVE_CREATE\";\r\nconst ACTIVE_UPDATE = \"ACTIVE_UPDATE\";\r\nconst CREATE_NOTE = \"CREATE_NOTE\";\r\nconst SET_UPDATE_ID = \"SET_UPDATE_ID\";\r\nconst UPDATE_NOTE = \"UPDATE_NOTE\";\r\nconst DELETE_NOTE = \"DELETE_NOTE\";\r\n\r\n//--------------------------REDUCER\r\n\r\nexport default function notesReducer(state = data, action) {\r\n  switch (action.type) {\r\n    case ACTIVE_CREATE:\r\n      return {\r\n        ...state,\r\n        createForm: action.payload,\r\n      };\r\n\r\n    case ACTIVE_UPDATE:\r\n      return {\r\n        ...state,\r\n        updateForm: action.payload,\r\n      };\r\n\r\n    case CREATE_NOTE:\r\n      return {\r\n        ...state,\r\n        array: [...state.array, action.payload],\r\n        createForm: false,\r\n      };\r\n\r\n    case SET_UPDATE_ID:\r\n      return {\r\n        ...state,\r\n        updateId: action.payload,\r\n      };\r\n\r\n    case UPDATE_NOTE: {\r\n      const { id, title, description } = action.payload;\r\n      const index = state.array.findIndex((note) => note.id === id);\r\n      const newArray = [...state.array];\r\n      newArray[index] = {\r\n        id,\r\n        title,\r\n        description,\r\n      };\r\n\r\n      return {\r\n        ...state,\r\n        array: newArray,\r\n        update: {\r\n          id: null,\r\n          form: false,\r\n        },\r\n      };\r\n    }\r\n\r\n    case DELETE_NOTE: {\r\n      const newArray = state.array.filter((note) => note.id !== action.payload);\r\n      return { ...state, array: newArray };\r\n    }\r\n\r\n    default:\r\n      return data;\r\n  }\r\n}\r\n\r\n//---------------------------ACTIONS\r\n\r\nexport const activeCreateForm = (active) => (dispatch, getState) => {\r\n  dispatch({\r\n    type: ACTIVE_CREATE,\r\n    payload: active,\r\n  });\r\n};\r\n\r\nexport const activeUpdateForm = (active) => (dispatch, getState) => {\r\n  dispatch({\r\n    type: ACTIVE_UPDATE,\r\n    payload: active,\r\n  });\r\n};\r\n\r\nexport const createNote = (noteDetails) => (dispatch, getState) => {\r\n  const id = randomId();\r\n  const { title, description } = noteDetails;\r\n  dispatch({\r\n    type: CREATE_NOTE,\r\n    payload: {\r\n      id,\r\n      title,\r\n      description,\r\n    },\r\n  });\r\n};\r\n\r\nexport const setUpdateId = (id) => (dispatch, getState) => {\r\n  dispatch({\r\n    type: SET_UPDATE_ID,\r\n    payload: id,\r\n  });\r\n};\r\n\r\nexport const updateNote = (noteDetails) => (dispatch, getState) => {\r\n  const id = getState().notes.updateId;\r\n  const { title, description } = noteDetails;\r\n  dispatch({\r\n    type: UPDATE_NOTE,\r\n    payload: {\r\n      id,\r\n      title,\r\n      description,\r\n    },\r\n  });\r\n};\r\n\r\nexport const deleteNote = (id) => (dispatch, getState) => {\r\n  dispatch({\r\n    type: DELETE_NOTE,\r\n    payload: id,\r\n  });\r\n};\r\n","//---IMPORTS\r\nimport { combineReducers, createStore, compose, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport notesReducer from \"./notes.reducer\";\r\n\r\n//---COMBINE REDUCERS\r\nconst rootReducer = combineReducers({\r\n  notes: notesReducer,\r\n});\r\n\r\n//---CONFIG\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst generateStore = () => {\r\n  const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(applyMiddleware(thunk))\r\n  );\r\n  return store;\r\n};\r\n\r\n//---EXPORT\r\nexport default generateStore;\r\n","import \"./Navbar.css\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { activeCreateForm } from \"../../store/notes.reducer\";\r\n\r\nconst Navbar = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const active = () => {\r\n    dispatch(activeCreateForm(true));\r\n  };\r\n\r\n  return (\r\n    <nav id=\"navbar\" className=\"mb-4\">\r\n      <div className=\"container\">\r\n        <span>Notes App</span>\r\n        <button className=\"btn btn-success\" onClick={active}>\r\n          Create Note\r\n        </button>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import \"./CreateForm.css\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nimport { createNote, activeCreateForm } from \"../../store/notes.reducer\";\r\n\r\nconst CreateForm = () => {\r\n  const { register, errors, handleSubmit } = useForm();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [data, setData] = useState({\r\n    title: \"\",\r\n    description: \"\",\r\n  });\r\n\r\n  const create = (e) => {\r\n    dispatch(createNote(data));\r\n  };\r\n\r\n  const closeForm = (e) => {\r\n    e.preventDefault();\r\n    dispatch(activeCreateForm(false));\r\n  };\r\n\r\n  const activeForm = useSelector((store) => store.notes.createForm);\r\n\r\n  return (\r\n    <>\r\n      {activeForm ? (\r\n        <div id=\"create-form-container\">\r\n          <form onSubmit={handleSubmit(create)} id=\"create-form\">\r\n            <div className=\"card\">\r\n              <div className=\"card-header\">\r\n                <h2>Create new note</h2>\r\n                <button\r\n                  id=\"close-btn-create\"\r\n                  className=\"btn\"\r\n                  onClick={closeForm}\r\n                >\r\n                  <i className=\"fas fa-times\"></i>\r\n                </button>\r\n              </div>\r\n\r\n              <div className=\"card-body\">\r\n                <input\r\n                  className=\"form-control mb-2\"\r\n                  name=\"title\"\r\n                  type=\"text\"\r\n                  placeholder=\"Title\"\r\n                  ref={register({\r\n                    required: {\r\n                      value: true,\r\n                      message: \"The title is required\",\r\n                    },\r\n                    maxLength: {\r\n                      value: 12,\r\n                      message: \"The maximum length is 12 characters\",\r\n                    },\r\n                  })}\r\n                  onChange={(e) => setData({ ...data, title: e.target.value })}\r\n                />\r\n                {errors.title && (\r\n                  <span className=\"text-danger d-block mb-2\">\r\n                    {errors.title.message}\r\n                  </span>\r\n                )}\r\n\r\n                <textarea\r\n                  rows=\"4\"\r\n                  className=\"form-control mb-2\"\r\n                  name=\"description\"\r\n                  placeholder=\"Description\"\r\n                  ref={register({\r\n                    required: {\r\n                      value: true,\r\n                      message: \"A description is required\",\r\n                    },\r\n                    maxLength: {\r\n                      value: 150,\r\n                      message: \"The maximum length is 150 characters\",\r\n                    },\r\n                  })}\r\n                  onChange={(e) =>\r\n                    setData({ ...data, description: e.target.value })\r\n                  }\r\n                />\r\n                {errors.description && (\r\n                  <span className=\"text-danger d-block mb-2\">\r\n                    {errors.description.message}\r\n                  </span>\r\n                )}\r\n\r\n                <button className=\"btn btn-success\">Create</button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreateForm;\r\n","import \"./EditForm.css\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nimport { updateNote, activeUpdateForm } from \"../../store/notes.reducer\";\r\n\r\nconst EditForm = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { register, errors, handleSubmit } = useForm();\r\n\r\n  const activeForm = useSelector((store) => store.notes.updateForm);\r\n\r\n  const [data, setData] = useState({\r\n    title: \"\",\r\n    description: \"\",\r\n  });\r\n\r\n  const update = (e) => {\r\n    dispatch(updateNote(data));\r\n    dispatch(activeUpdateForm(false));\r\n  };\r\n\r\n  const closeForm = (e) => {\r\n    e.preventDefault();\r\n    dispatch(activeUpdateForm(false));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {activeForm ? (\r\n        <div id=\"edit-form-container\">\r\n          <form onSubmit={handleSubmit(update)} id=\"edit-form\">\r\n            <div className=\"card\">\r\n              <div className=\"card-header\">\r\n                <h2>Edit Note</h2>\r\n                <button id=\"close-btn-edit\" className=\"btn\" onClick={closeForm}>\r\n                  <i className=\"fas fa-times\"></i>\r\n                </button>\r\n              </div>\r\n\r\n              <div className=\"card-body\">\r\n                <input\r\n                  className=\"form-control mb-2\"\r\n                  name=\"title\"\r\n                  type=\"text\"\r\n                  placeholder=\"New Title\"\r\n                  ref={register({\r\n                    required: {\r\n                      value: true,\r\n                      message: \"The title is required\",\r\n                    },\r\n                    maxLength: {\r\n                      value: 12,\r\n                      message: \"The maximum length is 12 characters\",\r\n                    },\r\n                  })}\r\n                  onChange={(e) => setData({ ...data, title: e.target.value })}\r\n                />\r\n                {errors.title && (\r\n                  <span className=\"text-danger d-block mb-2\">\r\n                    {errors.title.message}\r\n                  </span>\r\n                )}\r\n\r\n                <textarea\r\n                  rows=\"4\"\r\n                  className=\"form-control mb-2\"\r\n                  name=\"description\"\r\n                  placeholder=\"New Description\"\r\n                  ref={register({\r\n                    required: {\r\n                      value: true,\r\n                      message: \"A description is required\",\r\n                    },\r\n                    maxLength: {\r\n                      value: 150,\r\n                      message: \"The maximum length is 150 characters\",\r\n                    },\r\n                  })}\r\n                  onChange={(e) =>\r\n                    setData({ ...data, description: e.target.value })\r\n                  }\r\n                />\r\n                {errors.description && (\r\n                  <span className=\"text-danger d-block mb-2\">\r\n                    {errors.description.message}\r\n                  </span>\r\n                )}\r\n\r\n                <button className=\"btn btn-success\">Update</button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditForm;\r\n","import \"./Notes.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  setUpdateId,\r\n  deleteNote,\r\n  activeUpdateForm,\r\n} from \"../../store/notes.reducer\";\r\n\r\nconst Notes = () => {\r\n  const dispatch = useDispatch();\r\n  const notes = useSelector((store) => store.notes.array);\r\n\r\n  const setId = (e) => {\r\n    dispatch(setUpdateId(e.target.name));\r\n    dispatch(activeUpdateForm(true));\r\n  };\r\n\r\n  const delNote = (e) => {\r\n    dispatch(deleteNote(e.target.name));\r\n  };\r\n\r\n  return (\r\n    <div id=\"notes-component\">\r\n      <div id=\"notes-container\" className=\"container mb-4\">\r\n        {notes.map((item) => (\r\n          <div className=\"card\" key={item.id}>\r\n            <div className=\"card-header\">\r\n              <h2>{item.title}</h2>\r\n              <button\r\n                className=\"btn btn-success\"\r\n                name={item.id}\r\n                onClick={setId}\r\n              >\r\n                Edit\r\n              </button>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <p>{item.description}</p>\r\n              <button\r\n                className=\"btn btn-danger\"\r\n                name={item.id}\r\n                onClick={delNote}\r\n              >\r\n                Delete\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notes;\r\n","import \"./Footer.css\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer id=\"footer\">\r\n      <p>&copy; Copyright 2021 - Marco Subero</p>\r\n      <p>Contact: marco_subero1996@hotmail.com</p>\r\n      <p>All Rights Reserved</p>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import \"./App.css\";\nimport { Provider } from \"react-redux\";\n\nimport generateStore from \"./store/store\";\nimport Navbar from \"./common/navbar/Navbar\";\nimport CreateForm from \"./components/createForm/CreateForm\";\nimport EditForm from \"./components/editForm/EditForm\";\nimport Notes from \"./components/notes/Notes\";\nimport Footer from \"./common/footer/Footer\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Provider store={generateStore()}>\n        <Navbar />\n        <Notes />\n        <CreateForm />\n        <EditForm />\n        <Footer />\n      </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App.jsx\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}